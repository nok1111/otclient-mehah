CharacterWidget < Panel
  padding: 7
  padding-top: 3
  image-source: /images/ui/miniwindow
  image-border: 23
  border-width: 1
  border-color: alpha
  &updateOnStates: |
    function(self)
      local children = self:getChildren()
      for i=1,#children do
        children[i]:setOn(self:isFocused())
      end
    end
  @onFocusChange: self:updateOnStates()
  @onSetup: self:updateOnStates()

  $focus:
    border-color: #ffffff

  Label
    id: name
    anchors.top: parent.top
    anchors.horizontalCenter: parent.horizontalCenter
    height: 18

  Panel
    id: outfit
    anchors.top: prev.bottom
    anchors.bottom: next.top
    anchors.left: parent.left
    anchors.right: parent.right
    image-source: /images/ui/textedit
    image-border: 2
    margin-top: 4
    margin-bottom: 3

    UICreature
      id: creature
      anchors.centerIn: parent
      size: 48 48

  FlatPanel
    id: info
    anchors.bottom: parent.bottom
    anchors.left: parent.left
    anchors.right: parent.right
    margin-top: 4
    margin-bottom: 3
    height: 28

    Label
      id: vocation
      anchors.top: parent.top
      anchors.horizontalCenter: parent.horizontalCenter

    Label
      id: level
      anchors.top: vocation.bottom
      anchors.horizontalCenter: parent.horizontalCenter
      &baseText: 'Level: %s'

MainWindow
  id: charactersWindow
  !text: tr('Character List')
  visible: false
  size: 410 405
  $mobile:
    size: 410 280
  @onEnter: CharacterList.doLogin()
  @onEscape: CharacterList.hide(true)
  @onSetup: |
    g_keyboard.bindKeyPress('Up', function() self:getChildById('characters'):focusPreviousChild(KeyboardFocusReason) end, self)
    g_keyboard.bindKeyPress('Down', function() self:getChildById('characters'):focusNextChild(KeyboardFocusReason) end, self)
    g_keyboard.bindKeyPress('Left', function() self:getChildById('characters'):focusPreviousChild(KeyboardFocusReason) end, self)
    g_keyboard.bindKeyPress('Right', function() self:getChildById('characters'):focusNextChild(KeyboardFocusReason) end, self)  

  ScrollablePanel
    id: characters
    anchors.top: parent.top
    anchors.left: parent.left
    anchors.right: parent.right
    anchors.bottom: accountStatusCaption.top
    margin-bottom: 5
    background-color: #404040
    padding: 1
    focusable: false
    auto-focus: first
    layout:
      type: grid
      cell-size: 120 147
      flow: true
      cell-spacing: 2
    vertical-scrollbar: scrollBar

  VerticalScrollBar
    id: scrollBar
    anchors.top: characters.top
    anchors.bottom: characters.bottom
    anchors.right: characters.right
    step: 50
    pixels-scroll: true

  Label
    id: accountStatusCaption
    !text: tr('Account Status') .. ':'
    anchors.left: parent.left
    anchors.bottom: separator.top
    margin-bottom: 5

  Label
    id: accountStatusLabel
    !text: tr('Free Account')
    anchors.left: accountStatusCaption.right
    anchors.bottom: separator.top
    margin-left: 5
    margin-bottom: 5
    text-auto-resize: true

    $on:
      color: #FF0000

  HorizontalSeparator
    id: separator
    anchors.left: parent.left
    anchors.right: parent.right
    anchors.bottom: next.top
    margin-bottom: 10

  Button
    id: autoReconnect
    width: 140
    anchors.left: parent.left
    anchors.bottom: parent.bottom
    
    $!on:
      image-color: red    
      !text: tr('Auto reconnect: Off')

    $on:
      !text: tr('Auto reconnect: On')
      image-color: green

  Button
    id: buttonOk
    !text: tr('Ok')
    width: 64
    anchors.right: next.left
    anchors.bottom: parent.bottom
    margin-right: 10
    @onClick: CharacterList.doLogin()

  Button
    id: buttonCancel
    !text: tr('Cancel')
    width: 64
    anchors.right: parent.right
    anchors.bottom: parent.bottom
    @onClick: CharacterList.hide(true)
